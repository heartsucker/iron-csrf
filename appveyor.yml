version: '{build}'

skip_branch_with_pr: true
skip_tags: true

max_jobs: 6

matrix:
  fast_finish: true

environment:
  # TODO have matrix expand to include stable, beta, and nightly
  matrix:
    # Rust - Stable
    - TARGET: i686-pc-windows-gnu
      RUST_VERSION: stable
      BITS: 32
      MSYS2: 1
    - TARGET: x86_64-pc-windows-msvc
      RUST_VERSION: stable
      BITS: 64

    # Rust - Beta
    - TARGET: i686-pc-windows-gnu
      RUST_VERSION: beta
      BITS: 32
      MSYS2: 1
    - TARGET: x86_64-pc-windows-msvc
      RUST_VERSION: beta
      BITS: 64

    # Rust - Nightly
    - TARGET: i686-pc-windows-gnu
      RUST_VERSION: nightly
      BITS: 32
      MSYS2: 1
    - TARGET: x86_64-pc-windows-msvc
      RUST_VERSION: nightly
      BITS: 64

install:
  # Install Rust
  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  - rustup-init.exe -y --default-host %TARGET%
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - if defined MSYS2 set PATH=C:\msys64\mingw%BITS%\bin;%PATH%

build: false

test_script:
  - rustup.exe default %RUST_VERSION%
  - rustc -V
  - cargo -V
  - git submodule update --init --recursive
  - SET RUST_BACKTRACE=full
  - cargo build --verbose --target %TARGET%
  - cargo test --verbose --no-run --target %TARGET%
  - SET RUST_LOG=debug
  - cargo test --verbose --target %TARGET%

# TODO on failure cat Cargo.lock (but only we can't use make)

cache:
  - C:\Users\appveyor\.cargo\bin
